/** 
 * Web Worker hook generated by ChatGBT with some tweaks by me 
 * */

import { useState, useEffect, useRef } from 'react';

interface WorkerData {
    data: any;
}

interface WorkerFunction {
    (): void;
}

const useWorker = (workerFn: WorkerFunction): [WorkerData | null, (data: any) => void] => {
    const workerRef = useRef<Worker | null>(null);
    const [workerData, setWorkerData] = useState<WorkerData | null>(null);

    useEffect(() => {
        if (!workerFn) {
            return;
        }

        const worker = new Worker(URL.createObjectURL(new Blob([`(${workerFn})()`])));
        workerRef.current = worker;

        worker.onmessage = event => {
            setWorkerData(event.data);
        };

        return () => {
            if (workerRef.current) {
                workerRef.current.terminate();
            }
        };
    }, [workerFn]);

    const postMessageToWorker = useRef((data: any) => {
        workerRef.current!.postMessage(data);
    }).current;

    return [workerData, postMessageToWorker];
};

export default useWorker;