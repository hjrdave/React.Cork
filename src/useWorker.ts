/** 
 * Web Worker hook generated by ChatGBT with some tweaks by me 
 * */

import { useState, useEffect, useRef } from 'react';
import useNonInitialEffect from './useNonInitialEffect';

const useWorker = <TData=any>(workerFn: () => TData) => {
    const [trigger, setTrigger] = useState([]);
    const workerRef = useRef<Worker | null>(null);
    const [data, setData] = useState<TData | null>(null);

    useNonInitialEffect(() => {
        const worker = new Worker(URL.createObjectURL(new Blob([`(${workerFn})()`])));
        workerRef.current = worker;

        worker.onmessage = event => {
            setData(event.data);
        };

        return () => {
            if (workerRef.current) {
                workerRef.current.terminate();
            }
        };
    }, [trigger]);

    const run = () => (setTrigger([]));

    const postMessage = useRef((data: any) => {
        workerRef.current!.postMessage(data);
    }).current;

    return {data, postMessage, run};
};

export default useWorker;